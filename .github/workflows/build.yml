on: workflow_call

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 11
          distribution: temurin
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Build
        run: ./gradlew build

  postgres-tests:
    needs: [ build ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        postgres: [ "16.0", "15.4", "14.9", "13.12"]
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 11
          distribution: temurin
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Test PostgreSQL versions
        run: ./gradlew :postgresql:test
        env:
          POSTGRES_VERSION: ${{ matrix.postgres }}

  mysql-tests:
    needs: [ build ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mysql: [ "8.2.0", "8.1.0", "8.0.35" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 11
          distribution: temurin
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Test MySQL versions
        run: ./gradlew :mysql:test
        env:
          MYSQL_VERSION: ${{ matrix.mysql }}

  h2-tests:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 11
          distribution: temurin
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Test H2 support
        run: ./gradlew :h2:test

  results:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    name: Build Outcome
    needs: [ build, postgres-tests, mysql-tests, h2-tests ]
    steps:
      - run: |
          buildResult="${{ needs.build.result }}"
          if [[ $buildResult != "success" && $buildResult != "skipped" ]]; then
            exit 1
          fi
          postgresTestResult="${{ needs.postgres-tests.result }}"
          if [[ $postgresTestResult != "success" && $postgresTestResult != "skipped" ]]; then
            exit 1
          fi
          mysqlTestResult="${{ needs.mysql-tests.result }}"
          if [[ $mysqlTestResult != "success" && $mysqlTestResult != "skipped" ]]; then
            exit 1
          fi
          h2TestResult="${{ needs.h2-tests.result }}"
          if [[ $h2TestResult != "success" && $h2TestResult != "skipped" ]]; then
            exit 1
          fi
          exit 0


