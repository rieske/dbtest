on:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin
      - name: Build
        uses: burrunan/gradle-cache-action@v1
        with:
          arguments: build

  postgres-tests:
    needs: [ build ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        postgres: [ 15.2, 14.7, 13.10]
    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin
      - name: Test PostgreSQL versions
        uses: burrunan/gradle-cache-action@v1
        env:
          POSTGRES_VERSION: ${{ matrix.postgres }}
        with:
          arguments: :postgresql:test

  mysql-tests:
    needs: [ build ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mysql: [ 8.0.33, 8.0.31, 8.0.30 ]
    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin
      - name: Test MySQL versions
        uses: burrunan/gradle-cache-action@v1
        env:
          MYSQL_VERSION: ${{ matrix.mysql }}
        with:
          arguments: :mysql:test

  h2-tests:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin
      - name: Test H2 support
        uses: burrunan/gradle-cache-action@v1
        with:
          arguments: :h2:test

  results:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    name: Build Outcome
    needs: [ build, postgres-tests, mysql-tests, h2-tests ]
    steps:
      - run: |
          buildResult="${{ needs.build.result }}"
          if [[ $buildResult != "success" && $buildResult != "skipped" ]]; then
            exit 1
          fi
          postgresTestResult="${{ needs.postgres-tests.result }}"
          if [[ $postgresTestResult != "success" && $postgresTestResult != "skipped" ]]; then
            exit 1
          fi
          mysqlTestResult="${{ needs.mysql-tests.result }}"
          if [[ $mysqlTestResult != "success" && $mysqlTestResult != "skipped" ]]; then
            exit 1
          fi
          h2TestResult="${{ needs.h2-tests.result }}"
          if [[ $h2TestResult != "success" && $h2TestResult != "skipped" ]]; then
            exit 1
          fi
          exit 0


